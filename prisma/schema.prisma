// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id           String         @id @unique @default(cuid())
  email        String         @unique @db.VarChar(50)
  name         String         @db.VarChar(100)
  phone        String
  address      String
  passwordHash String
  lostPets     LostPets[]
  adoptionPets AdoptionPets[]
  createdAt    DateTime       @default(now())
  updateAt     DateTime       @updatedAt
  isDeleted    Boolean        @default(false)
}

model Breed {
  id        String   @id @unique @default(cuid())
  name      String   @unique @db.VarChar(100)
  pets      Pets[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
}

model Species {
  id        String   @id @unique @default(cuid())
  name      String   @unique @db.VarChar(100)
  pets      Pets[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isDeleted Boolean  @default(false)
}

model Contacts {
  id           String         @id @unique @default(cuid())
  name         String         @db.VarChar(100)
  phone        String
  address      String
  lostPets     LostPets[]
  adoptionPets AdoptionPets[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  isDeleted    Boolean        @default(false)
}

model Images {
  id    String @id @unique @default(cuid())
  url   String
  pet   Pets   @relation(fields: [petId], references: [id])
  petId String
}

model Pets {
  id                 String         @id @unique @default(cuid())
  name               String         @db.VarChar(100)
  ageUnit            Boolean
  age                Int
  sex                String
  size               String
  image              String
  images             Images[]
  location_latitude  Float
  location_longitude Float
  breed              Breed          @relation(fields: [breedId], references: [id])
  breedId            String
  specie             Species        @relation(fields: [specieId], references: [id])
  specieId           String
  lostPets           LostPets[]
  adoptionPets       AdoptionPets[]
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  isDeleted          Boolean        @default(false)
}

model LostPets {
  id          String   @id @unique @default(cuid())
  lostDate    DateTime
  statusLost  Boolean
  description String
  pet         Pets     @relation(fields: [petId], references: [id])
  petId       String
  user        Users    @relation(fields: [userId], references: [id])
  userId      String
  contact     Contacts @relation(fields: [contactId], references: [id])
  contactId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isDeleted   Boolean  @default(false)
}

model AdoptionPets {
  id          String   @id @unique @default(cuid())
  statusAdopt Boolean
  description String
  pet         Pets     @relation(fields: [petId], references: [id])
  petId       String
  user        Users    @relation(fields: [userId], references: [id])
  userId      String
  contact     Contacts @relation(fields: [contactId], references: [id])
  contactId   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isDeleted   Boolean  @default(false)
}
